/*
 * Copyright (c) 2023. Knight Hat
 * All rights reserved.
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software
 * and associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
package me.knighthat.interactivedeck.menus;

import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.io.File;
import java.io.IOException;
import java.util.*;
import javax.swing.DefaultComboBoxModel;
import me.knighthat.interactivedeck.connection.Connection;
import me.knighthat.interactivedeck.connection.request.Request;
import me.knighthat.interactivedeck.connection.request.UpdateRequest;
import me.knighthat.interactivedeck.connection.wireless.WirelessSender;
import me.knighthat.interactivedeck.console.Log;
import me.knighthat.interactivedeck.menus.component.ibutton.IButton;
import me.knighthat.interactivedeck.file.Profile;
import me.knighthat.interactivedeck.profile.Profiles;
import me.knighthat.interactivedeck.utils.ColorUtils;
import me.knighthat.interactivedeck.utils.GlobalVars;
import me.knighthat.interactivedeck.file.Settings;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 *
 * @author knighthat
 */
public class MainMenu extends javax.swing.JFrame {

    static {
        Thread.currentThread().setName("GUI");
    }

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        super(GlobalVars.name() + " - " + GlobalVars.version());
        setLocationRelativeTo(null);
        setAlwaysOnTop(false);
        initComponents();

        GridBagLayout layout = new GridBagLayout();
        iBtnSection.setLayout(layout);
        show(Profiles.active());

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing( WindowEvent e ) {
                if (bSelected != null)
                    bSelected.unselect();

                Settings.dump();
                Profiles.list().forEach(Profile::dump);
                super.windowClosing(e);
            }});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        profilesSection = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        iBtnSection = new javax.swing.JPanel();
        btnModifierSection = new javax.swing.JPanel();
        iBtnName = new javax.swing.JTextField();
        iBtnFgColor = new javax.swing.JTextField();
        btnNameModifier = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        iBtnBgColor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        iBtnScript = new javax.swing.JTextField();
        statusSection = new javax.swing.JPanel();
        conStatus = Connection.component();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(1000, 600));
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setPreferredSize(new java.awt.Dimension(1000, 600));
        setResizable(false);

        profilesSection.setBackground(new java.awt.Color(36, 36, 36));
        profilesSection.setPreferredSize(new java.awt.Dimension(1000, 50));

        jComboBox2.setBackground(new java.awt.Color(51, 51, 51));
        String[] tempItems = new String[0];
        jComboBox2.setModel(new DefaultComboBoxModel<>(tempItems));
        jComboBox2.setPreferredSize(new java.awt.Dimension(300, 30));

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setText("Add");
        jButton4.setAlignmentY(0.0F);
        jButton4.setMaximumSize(new java.awt.Dimension(100, 30));
        jButton4.setMinimumSize(new java.awt.Dimension(100, 30));
        jButton4.setPreferredSize(new java.awt.Dimension(100, 30));

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setText("Remove");
        jButton1.setAlignmentY(0.0F);
        jButton1.setMaximumSize(new java.awt.Dimension(100, 30));
        jButton1.setMinimumSize(new java.awt.Dimension(100, 30));
        jButton1.setPreferredSize(new java.awt.Dimension(100, 30));

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setText("Configure");
        jButton2.setAlignmentY(0.0F);
        jButton2.setMaximumSize(new java.awt.Dimension(100, 30));
        jButton2.setMinimumSize(new java.awt.Dimension(100, 30));
        jButton2.setPreferredSize(new java.awt.Dimension(100, 30));

        javax.swing.GroupLayout profilesSectionLayout = new javax.swing.GroupLayout(profilesSection);
        profilesSection.setLayout(profilesSectionLayout);
        profilesSectionLayout.setHorizontalGroup(
            profilesSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilesSectionLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        profilesSectionLayout.setVerticalGroup(
            profilesSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilesSectionLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(profilesSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getContentPane().add(profilesSection, java.awt.BorderLayout.NORTH);

        iBtnSection.setBackground(new java.awt.Color(51, 51, 51));
        iBtnSection.setDoubleBuffered(false);
        iBtnSection.setPreferredSize(new java.awt.Dimension(750, 0));

        javax.swing.GroupLayout iBtnSectionLayout = new javax.swing.GroupLayout(iBtnSection);
        iBtnSection.setLayout(iBtnSectionLayout);
        iBtnSectionLayout.setHorizontalGroup(
            iBtnSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        iBtnSectionLayout.setVerticalGroup(
            iBtnSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        getContentPane().add(iBtnSection, java.awt.BorderLayout.WEST);

        btnModifierSection.setBackground(new java.awt.Color(36, 36, 36));
        btnModifierSection.setDoubleBuffered(false);
        btnModifierSection.setPreferredSize(new java.awt.Dimension(250, 0));
        btnModifierSection.setLayout(new java.awt.GridBagLayout());

        iBtnName.setBackground(new java.awt.Color(51, 51, 51));
        iBtnName.setForeground(new java.awt.Color(255, 255, 255));
        iBtnName.setText("Enter Name");
        iBtnName.setMaximumSize(new java.awt.Dimension(200, 40));
        iBtnName.setMinimumSize(new java.awt.Dimension(200, 40));
        iBtnName.setName(""); // NOI18N
        iBtnName.setPreferredSize(new java.awt.Dimension(200, 40));
        iBtnName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                modifierFocusLostEvent(evt);
            }
        });
        iBtnName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierEnterKeyPressedEvent(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        btnModifierSection.add(iBtnName, gridBagConstraints);

        iBtnFgColor.setBackground(new java.awt.Color(51, 51, 51));
        iBtnFgColor.setForeground(new java.awt.Color(255, 255, 255));
        iBtnFgColor.setText("Hex Color");
        iBtnFgColor.setMaximumSize(new java.awt.Dimension(200, 40));
        iBtnFgColor.setMinimumSize(new java.awt.Dimension(200, 40));
        iBtnFgColor.setPreferredSize(new java.awt.Dimension(200, 40));
        iBtnFgColor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                modifierFocusLostEvent(evt);
            }
        });
        iBtnFgColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierEnterKeyPressedEvent(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        btnModifierSection.add(iBtnFgColor, gridBagConstraints);

        btnNameModifier.setForeground(new java.awt.Color(255, 255, 255));
        btnNameModifier.setText("Name");
        btnNameModifier.setToolTipText("Text display on the button");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        btnModifierSection.add(btnNameModifier, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Text Color");
        jLabel2.setToolTipText("Colorize display text");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        btnModifierSection.add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Background Color");
        jLabel3.setToolTipText("Set background color for button");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        btnModifierSection.add(jLabel3, gridBagConstraints);

        iBtnBgColor.setBackground(new java.awt.Color(51, 51, 51));
        iBtnBgColor.setForeground(new java.awt.Color(255, 255, 255));
        iBtnBgColor.setText("Hex Color");
        iBtnBgColor.setMaximumSize(new java.awt.Dimension(200, 40));
        iBtnBgColor.setMinimumSize(new java.awt.Dimension(200, 40));
        iBtnBgColor.setPreferredSize(new java.awt.Dimension(200, 40));
        iBtnBgColor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                modifierFocusLostEvent(evt);
            }
        });
        iBtnBgColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierEnterKeyPressedEvent(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        btnModifierSection.add(iBtnBgColor, gridBagConstraints);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Execute");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        btnModifierSection.add(jLabel1, gridBagConstraints);

        iBtnScript.setBackground(new java.awt.Color(51, 51, 51));
        iBtnScript.setForeground(new java.awt.Color(255, 255, 255));
        iBtnScript.setText("Path To Script");
        iBtnScript.setMaximumSize(new java.awt.Dimension(200, 40));
        iBtnScript.setMinimumSize(new java.awt.Dimension(200, 40));
        iBtnScript.setPreferredSize(new java.awt.Dimension(200, 40));
        iBtnScript.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                modifierFocusLostEvent(evt);
            }
        });
        iBtnScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierEnterKeyPressedEvent(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        btnModifierSection.add(iBtnScript, gridBagConstraints);

        getContentPane().add(btnModifierSection, java.awt.BorderLayout.CENTER);

        statusSection.setBackground(new java.awt.Color(36, 36, 36));
        statusSection.setAlignmentX(0.0F);
        statusSection.setAlignmentY(0.0F);
        statusSection.setPreferredSize(new java.awt.Dimension(1000, 30));

        javax.swing.GroupLayout statusSectionLayout = new javax.swing.GroupLayout(statusSection);
        statusSection.setLayout(statusSectionLayout);
        statusSectionLayout.setHorizontalGroup(
            statusSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusSectionLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(conStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(855, Short.MAX_VALUE))
        );
        statusSectionLayout.setVerticalGroup(
            statusSectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusSectionLayout.createSequentialGroup()
                .addComponent(conStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(statusSection, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    void show(@NotNull Profile profile) {
        GridBagConstraints constraints = new GridBagConstraints();
                constraints.anchor = GridBagConstraints.CENTER;
                constraints.fill = GridBagConstraints.BOTH;
                constraints.weightx = profile.column() > 6 ? 1d : 0d;
                constraints.weighty = profile.row() > 4 ? 1d : 0d;
                constraints.ipadx = profile.gap();
                constraints.ipady = profile.gap();

        profile
        .buttons()
        .forEach(
                button -> {
                            button.addMouseListener(new MouseAdapter() {
                                    @Override
                                    public void mouseClicked(MouseEvent e) {
                                        iBtnClickEvent(e);
                                    }
                            });
                            constraints.gridx = button.x();
                            constraints.gridy = button.y();
                            iBtnSection.add(button, constraints);
                        });
    }

    private void modifierFocusLostEvent(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_modifierFocusLostEvent
        javax.swing.JTextField modifier = (javax.swing.JTextField) evt.getComponent();
        updateButton(modifier);
    }//GEN-LAST:event_modifierFocusLostEvent

    private void modifierEnterKeyPressedEvent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierEnterKeyPressedEvent
        java.awt.Component component = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
        updateButton((javax.swing.JTextField) component);
    }//GEN-LAST:event_modifierEnterKeyPressedEvent

    void iBtnClickEvent(java.awt.event.MouseEvent evt) {
        if (bSelected != null)
            bSelected.unselect();
        bSelected = (IButton) evt.getComponent();
        bSelected.select();

        iBtnName.setText(bSelected.text());
        updateModifiers(iBtnFgColor, bSelected.foreground());
        updateModifiers(iBtnBgColor, bSelected.background());

        File script = bSelected.script();
        if (script == null) return;
        try{
            iBtnScript.setText(script.getCanonicalPath());
        } catch (IOException e) {
            Log.err("Error occurs while obtaining script's path");
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnModifierSection;
    private javax.swing.JLabel btnNameModifier;
    private me.knighthat.interactivedeck.menus.component.netstatus.ConStatus conStatus;
    private javax.swing.JTextField iBtnBgColor;
    private javax.swing.JTextField iBtnFgColor;
    private javax.swing.JTextField iBtnName;
    private javax.swing.JTextField iBtnScript;
    private javax.swing.JPanel iBtnSection;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel profilesSection;
    private javax.swing.JPanel statusSection;
    // End of variables declaration//GEN-END:variables

    private @Nullable IButton bSelected;

    void updateModifiers(@NotNull javax.swing.JTextField modifier, @NotNull Color bgColor) {
        String bgHex = ColorUtils.toHex(bgColor);
        modifier.setText(bgHex);
        modifier.setBackground(bgColor);
        modifier.setForeground(ColorUtils.getContrast(bgColor));
    }

    void updateButton(javax.swing.JTextField modifier) {
        if (bSelected == null) return;

        String content = modifier.getText();
        if (modifier == iBtnName) {
            bSelected.text(content);
        } else if (modifier == iBtnFgColor) {
            Color fg = ColorUtils.fromHex(content);
            bSelected.foreground(fg);
            updateModifiers(modifier, fg);
        } else if (modifier == iBtnBgColor) {
            Color bg = ColorUtils.fromHex(content);
            bSelected.background(bg);
            updateModifiers(modifier, bg);
        }else if (modifier == iBtnScript) {
            String path = modifier.getText();
            if (path.isBlank()) return;

            File script = new File(path);
            if (!script.exists()) {
                Log.err("File \"" + path + "\" does NOT exist!");
                return;
            }

            bSelected.script(script);
        }

        if (!Connection.isConnected()) return;

        Request request = new UpdateRequest(bSelected);
        WirelessSender.send(request);
    }
}
