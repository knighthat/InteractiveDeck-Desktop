/*
 * Copyright (c) 2023. Knight Hat
 * All rights reserved.
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use,copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
package me.knighthat.interactivedeck.menus;


import javax.swing.JRootPane;
import me.knighthat.interactivedeck.connection.request.AddRequest;import me.knighthat.interactivedeck.connection.request.Request;
import me.knighthat.interactivedeck.connection.wireless.WirelessSender;
import me.knighthat.interactivedeck.file.Profile;
import me.knighthat.interactivedeck.profile.Profiles;import java.util.List;

/**
 *
 * @author knighthat
 */
public class AddProfileMenu extends javax.swing.JDialog {

    /**
     * Creates new form AddProfileDialog
     */
    public AddProfileMenu(java.awt.Frame parent) {
        super(parent, false);
        
        super.getRootPane().setWindowDecorationStyle( JRootPane.NONE );
        super.setUndecorated( true );
        
        initComponents();
        
        super.setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        javax.swing.JLabel addProfileTitle = new javax.swing.JLabel();
        javax.swing.JPanel contentContainer = new javax.swing.JPanel();
        javax.swing.JLabel inputLabel = new javax.swing.JLabel();
        displayNameInput = new javax.swing.JTextField();
        javax.swing.JPanel buttonContainer = new javax.swing.JPanel();
        javax.swing.JButton createButton = new javax.swing.JButton();
        javax.swing.JButton cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));

        addProfileTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addProfileTitle.setText("Add Profile");
        addProfileTitle.setMaximumSize(new java.awt.Dimension(300, 30));
        addProfileTitle.setMinimumSize(new java.awt.Dimension(300, 30));
        addProfileTitle.setPreferredSize(new java.awt.Dimension(300, 30));
        getContentPane().add(addProfileTitle, java.awt.BorderLayout.PAGE_START);

        contentContainer.setOpaque(false);
        contentContainer.setLayout(new java.awt.GridBagLayout());

        inputLabel.setText("Display Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        contentContainer.add(inputLabel, gridBagConstraints);

        displayNameInput.setMaximumSize(new java.awt.Dimension(150, 30));
        displayNameInput.setMinimumSize(new java.awt.Dimension(150, 30));
        displayNameInput.setPreferredSize(new java.awt.Dimension(150, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        contentContainer.add(displayNameInput, gridBagConstraints);

        getContentPane().add(contentContainer, java.awt.BorderLayout.CENTER);

        buttonContainer.setBackground(new java.awt.Color(51, 51, 51));
        buttonContainer.setMaximumSize(new java.awt.Dimension(300, 50));
        buttonContainer.setMinimumSize(new java.awt.Dimension(300, 50));
        buttonContainer.setOpaque(false);
        buttonContainer.setPreferredSize(new java.awt.Dimension(300, 50));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 20, 15);
        flowLayout1.setAlignOnBaseline(true);
        buttonContainer.setLayout(flowLayout1);

        createButton.setText("Create");
        createButton.setMaximumSize(new java.awt.Dimension(80, 25));
        createButton.setMinimumSize(new java.awt.Dimension(80, 25));
        createButton.setPreferredSize(new java.awt.Dimension(80, 25));
        createButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createButtonMouseClicked(evt);
            }
        });
        buttonContainer.add(createButton);

        cancelButton.setText("Cancel");
        cancelButton.setMaximumSize(new java.awt.Dimension(80, 25));
        cancelButton.setMinimumSize(new java.awt.Dimension(80, 25));
        cancelButton.setPreferredSize(new java.awt.Dimension(80, 25));
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });
        buttonContainer.add(cancelButton);

        getContentPane().add(buttonContainer, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createButtonMouseClicked
        String fromUser = this.displayNameInput.getText().trim();
        if (fromUser.isBlank()) return;

        Profile profile = new Profile();
        profile.displayName = fromUser;

        Profiles.add( profile );
        ( (MainMenu) super.getOwner() ).updateProfilesList();

        Request request = new AddRequest(List.of(profile));
        WirelessSender.send(request);
        
        finish();
    }//GEN-LAST:event_createButtonMouseClicked

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        finish();
    }//GEN-LAST:event_cancelButtonMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField displayNameInput;
    // End of variables declaration//GEN-END:variables
    
     private void finish() {
        this.setVisible(false);
    }
}

